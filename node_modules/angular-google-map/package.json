{
  "name": "angular-google-map",
  "description": "A angular directive for loading a google map",
  "version": "0.0.2",
  "author": {
    "name": "Gary Stevens"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/garystevens/angular-google-map"
  },
  "license": "MIT",
  "engines": {
    "node": ">=2.0"
  },
  "devDependencies": {
    "fs-extra": "^0.24.0",
    "gulp": "^3.9.0",
    "gulp-concat": "^2.6.0",
    "gulp-connect": "^2.2.0",
    "gulp-jshint": "^1.11.2",
    "gulp-ng-annotate": "^1.0.0",
    "gulp-plumber": "^1.0.1",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^1.2.0",
    "gulp-util": "^3.0.6",
    "jshint-stylish": "^2.0.1"
  },
  "readme": "# Angular Google Map\n> An angular directive to display a custom google map\n\n## Installation\n\nVia NPM\n\n```\n$ npm install --save angular-google-map\n```\n\nor the simple way, by including ``/dist/angular-google-map.min.js`` into the head of your HTML.\n\n\n## Usage\nFollow these steps to get it working in your project. In ```src``` you can see a working example of the module and play around with it. Alternatively, just follow these steps.\n\n\n### Adding to your Angular project\nYou can add the module as a dependency after declaring your own module, like so:\n```\nangular\n    .module('myApp', ['angular-google-map'])\n    .config(config)\n    .run(run);\n```\nThe directive is now available to your app and can be used in your HTML.\n\n### HTML\nTo include the directive, use the following markup:\n```\n<google-maps\n    lat=\"51.507351\"\n    lng=\"-0.127758\"\n    apikey=\"YOUR-API-KEY-HERE\"\n</google-maps>\n```\n\n### Options\nThe Angular Google Maps directive works supports the majority of the style attributes that the native API supports. The only required properties are ```lat```, ```long``` and ```zoom``` the others are optional. The following is a list of the supported attributes, which can all be added as attributes to the ```<google-maps></google-maps>```\n\nAttribute | Type | Required | Default | Description\n--- | --- | --- | --- | ---\napikey | String | True| NONE| Your Google maps API Key. [You can obtain one easily from the website](https://developers.google.com/maps/documentation/javascript/get-api-key)\nlat| Float | True | NONE | Latitude position for map\nlong| Float | True | NONE | Longitude position for map\nclickable-icons| Boolean | Optional | True | Locations with more information are clickable\ncustom-css| String | Optional | \"height:400px;\" | Pass a CSS class to control the height, width and position of the map. Not setting a class will default the map to 400px high and 100% wide.\ncustom-map-name| String | Optional | N/A | If you pass in a custom map styling array, you can name it and make it selectable from from map styles control\ncustom-map-styles| Array | Optional | Default | A custom map skin, see [http://www.snazzymaps.com](http://www.snazzymaps.com) for examples\ndisable-default-ui| Boolean | Optional | False  |  Hide all controllable UI elements\ndisable-double-click-zoom| Boolean | Optional | True | Double clicking zooms in closer\ndraggable| Boolean | Optional | True | Sets wether the map can be moved by user dragging action\nfullscreen-control| Boolean | Optional | False | Display a control to fullscreen the map\nfullscreen-control-options| Boolean | Optional | 'TOP_LEFT' | Position controls for the fullscreen map\nmap-type| String | Optional | 'ROADMAP' | Choices are: 'ROADMAP','SATELLITE','HYBRID'\nmap-type-control| Boolean | Optional | True | Display the Map Type options buttons\nmap-type-control-options-style| String | Optional | 'HORIZONTAL_BAR' | Style for the buttons. Choices are: 'HORIZONTAL_BAR' or 'DROPDOWN_MENU'\nmap-type-control-options-position| String | Optional | 'TOP_LEFT' | Position of the buttons. Choices. See [Full API for details](https://developers.google.com/maps/documentation/javascript/controls#ControlPositioning)\nscrollwheel| Boolean | Optional | True | If False, use scrolling within the map will not effect zoom level.\nstreet-view-control| Boolean | Optional | True |  Display the Street View option\nstreet-view-control-options| Boolean | Optional | 'RIGHT_BOTTOM' | See [Full API for details](https://developers.google.com/maps/documentation/javascript/controls#ControlPositioning)\nzoom| Int | Optional | 8 | Default zoom level for map, the higher the number the closer the zoom\nzoom-control| Boolean | Optional | True | Display the zoom control\nzoom-control-options| Boolean | Optional | 'BOTTOM_RIGHT' | See [Full API for details](https://developers.google.com/maps/documentation/javascript/controls#ControlPositioning)\n\n## Support\n\nThis module has been developed to support versions of Angular from ``1.2.2`` up to ``1.4.5`` - If IE8 support is required please make sure to use Angular 1.2.\n\n## Browser Support\nThis module has been developed to support all modern browsers will providing legacy support for IE8 and up.\n\n## Development\nIf you wish to contribute or amend the source files and recompile you can do so by running the local development tasks.\n\nYou will need to install the dependencies by running ``npm install`` then run the default gulp task by running ``gulp``. This will create a local server and run the uncompiled version of the assets. The files are then visible at: ``http://localhost:8001``\n\nUnit tests are still to be added.\n\n## Roadmap\n\n* Unit tests\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/garystevens/angular-google-map/issues"
  },
  "_id": "angular-google-map@0.0.2",
  "_from": "angular-google-map@"
}
